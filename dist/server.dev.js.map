{"version":3,"sources":["server.js"],"names":["express","require","bodyParser","db","app","use","json","PORT","process","env","listen","console","log","post","req","res","body","order_date","customer_id","shipping_contact_mech_id","billing_contact_mech_id","order_items","Array","isArray","status","error","orderHeaderQuery","query","err","result","orderId","insertId","orderItemsQuery","orderItemsValues","map","item","product_id","quantity","message","get","params","order_id","orderDetailQuery","results","length","orderDetails","items"],"mappings":"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","sourcesContent":["// server.js\r\nconst express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst db = require('./db');\r\n\r\nconst app = express();\r\napp.use(bodyParser.json());\r\n\r\nconst PORT = process.env.PORT || 3000;\r\n\r\n// Start the server\r\napp.listen(PORT, () => {\r\n    console.log(`Server is running on port ${PORT}`);\r\n});\r\n\r\n// server.js (continued)\r\n\r\n// POST /orders - Create a new order\r\napp.post('/orders', (req, res) => {\r\n    const { order_date, customer_id, shipping_contact_mech_id, billing_contact_mech_id, order_items } = req.body;\r\n\r\n    // Validate input\r\n    if (!order_date || !customer_id || !shipping_contact_mech_id || !billing_contact_mech_id || !order_items || !Array.isArray(order_items)) {\r\n        return res.status(400).json({ error: 'Invalid input data' });\r\n    }\r\n\r\n    // Insert into Order_Header table\r\n    const orderHeaderQuery = `INSERT INTO Order_Header (order_date, customer_id, shipping_contact_mech_id, billing_contact_mech_id) VALUES (?, ?, ?, ?)`;\r\n    \r\n    db.query(orderHeaderQuery, [order_date, customer_id, shipping_contact_mech_id, billing_contact_mech_id], (err, result) => {\r\n        if (err) {\r\n            return res.status(500).json({ error: 'Database error while creating order header' });\r\n        }\r\n\r\n        const orderId = result.insertId; // Get the newly created order ID\r\n\r\n        // Prepare to insert order items\r\n        const orderItemsQuery = `INSERT INTO Order_Item (order_id, product_id, quantity, status) VALUES ?`;\r\n        const orderItemsValues = order_items.map(item => [orderId, item.product_id, item.quantity, item.status]);\r\n\r\n        // Insert all order items\r\n        db.query(orderItemsQuery, [orderItemsValues], (err) => {\r\n            if (err) {\r\n                return res.status(500).json({ error: 'Database error while creating order items' });\r\n            }\r\n\r\n            // Respond with success message and created order details\r\n            res.status(201).json({ message: 'Order created successfully', orderId });\r\n        });\r\n    });\r\n});\r\n\r\n// GET /orders/:order_id - Retrieve details of a specific order\r\napp.get('/orders/:order_id', (req, res) => {\r\n    const orderId = req.params.order_id;\r\n\r\n    // SQL query to retrieve order details\r\n    const orderDetailQuery = `\r\n        SELECT \r\n            oh.order_id,\r\n            oh.order_date AS \"date\",\r\n            c.first_name AS \"firstName\",\r\n            c.last_name AS \"lastName\",\r\n            CONCAT(cm1.street_address,' ', cm1.city,' ', cm1.state,' ', cm1.postal_code) AS \"shippingAddress\",\r\n            cm1.phone_number AS \"shippingContact\",\r\n            cm1.email AS \"shippingEmail\",\r\n            CONCAT(cm2.street_address,' ',cm2.city,' ', cm2.state,' ',cm2.postal_code) AS \"billingAddress\"\r\n        FROM \r\n            Order_Header AS oh \r\n        JOIN \r\n            Customer AS c ON oh.customer_id = c.customer_id \r\n        JOIN \r\n            Contact_Mech AS cm1 ON oh.shipping_contact_mech_id = cm1.contact_mech_id \r\n        JOIN \r\n            Contact_Mech AS cm2 ON oh.billing_contact_mech_id = cm2.contact_mech_id \r\n        WHERE \r\n            oh.order_id = ?`;\r\n\r\n    db.query(orderDetailQuery, [orderId], (err, results) => {\r\n        if (err) {\r\n            return res.status(500).json({ error: 'Database error while retrieving order details' });\r\n        }\r\n        \r\n        if (results.length === 0) {\r\n            return res.status(404).json({ error: 'Order not found' });\r\n        }\r\n\r\n        const orderDetails = results[0]; // Get the first result as we expect one record\r\n\r\n        // Query to retrieve associated order items\r\n        const orderItemsQuery = `\r\n            SELECT \r\n                oi.order_item_seq_id,\r\n                oi.order_id,\r\n                oi.product_id,\r\n                oi.quantity,\r\n                oi.status,\r\n                p.product_name,\r\n                p.color,\r\n                p.size\r\n            FROM \r\n                Order_Item AS oi \r\n            INNER JOIN \r\n                Product AS p ON oi.product_id = p.product_id \r\n            WHERE \r\n                oi.order_id = ?`;\r\n\r\n        db.query(orderItemsQuery, [orderId], (err, items) => {\r\n            if (err) {\r\n                return res.status(500).json({ error: 'Database error while retrieving order items' });\r\n            }\r\n\r\n            // Combine the results and send response\r\n            res.status(200).json({\r\n                ...orderDetails,\r\n                items: items // Include the associated items in the response\r\n            });\r\n        });\r\n    });\r\n});\r\n"],"file":"server.dev.js"}